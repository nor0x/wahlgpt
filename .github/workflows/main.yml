name: Deploy to GitHub Pages

# Run workflow on every push to the master branch
on:
  push:
    branches: [main]

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
      # uses GitHub's checkout action to checkout code form the main branch
      - uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      # - name: Replace base-tag in index.html
      #   run: |
      #     sed -i 's/<base href="\/" \/>/<base href="\/wahlgpt\/" \/>/g' WahlGPT.Web/wwwroot/index.html


      - name: replace settings values with secrets
        shell: pwsh
        run: |
         (Get-Content -Path WahlGPT.Common/Settings.cs) -replace 'API_ENDPOINT', '${{ secrets.API_ENDPOINT }}' | Set-Content -Path WahlGPT.Common/Settings.cs
         (Get-Content -Path WahlGPT.Common/Settings.cs) -replace 'OPENAI_API_KEY', '${{ secrets.OPENAI_API_KEY }}' | Set-Content -Path WahlGPT.Common/Settings.cs
         (Get-Content -Path WahlGPT.Common/Settings.cs) -replace 'QDRANT_HOST', '${{ secrets.QDRANT_HOST }}' | Set-Content -Path WahlGPT.Common/Settings.cs
         (Get-Content -Path WahlGPT.Common/Settings.cs) -replace 'QDRANT_API_KEY', '${{ secrets.QDRANT_API_KEY }}' | Set-Content -Path WahlGPT.Common/Settings.cs
         (Get-Content -Path WahlGPT.Common/Settings.cs) -replace 'BLOB_CONNECTION_STRING', '${{ secrets.BLOB_CONNECTION_STRING }}' | Set-Content -Path WahlGPT.Common/Settings.cs
         (Get-Content -Path WahlGPT.Common/Settings.cs) -replace 'COUNT_ENDPOINT', '${{ secrets.COUNT_ENDPOINT }}' | Set-Content -Path WahlGPT.Common/Settings.cs
         (Get-Content -Path WahlGPT.Common/Settings.cs) -replace 'VERSION_HASH', '${{ github.sha }}' | Set-Content -Path WahlGPT.Common/Settings.cs 

      - name: auto minify the files
        uses: nizarmah/auto-minify@v3
        with:
          directory: 'WahlGPT.Web/wwwroot'
          overwrite: true

      # publishes Blazor project to the release-folder
      - name: Publish .NET Core Project
        run: dotnet publish WahlGPT.Web/WahlGPT.Web.csproj -c Release -o release --nologo

      # copy index.html to 404.html to serve the same file when a file is not found
      - name: copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html

      # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll

      - name: Commit wwwroot to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: release/wwwroot